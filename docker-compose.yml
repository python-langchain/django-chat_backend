#version: "2.39.3"

services:
  postgres:
    image: postgres:16-alpine
    container_name: dev-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # Persistent data
      - postgres_data:/var/lib/postgresql/data
      # Optional: put .sql or .sh files in ./initdb to auto-run at first bootstrap
#      - ./initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      # use $$ to avoid Compose eating the $ intended for the container env
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dev-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    # Enable AOF persistence, set a password
    command:
      [
        "redis-server",
        "--appendonly", "yes",
        "--requirepass", "${REDIS_PASSWORD}",
        "--loglevel", "warning"
      ]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep -q PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
